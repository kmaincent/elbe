elbe-pbuilder(1)
================

NAME
----
elbe-pbuilder - High Level Interface to the ELBE Package Build System.
              Allows to create a package builder for a project and to build
              Debian packages.


SYNOPSIS
--------
[verse]
'elbe pbuilder' 'build'  [--project <project> | --xmlfile <xmlfile>]
'elbe pbuilder' 'create' [--project <project> | --xmlfile <xmlfile>] [--writeproject <filename>]

DESCRIPTION
-----------

Creates a pbuilder for a specified project and builds the Debian package
like pbuilder, but for the configured ELBE project.

OPTIONS
-------

--project <dir>::
	'key' (/var/cache/elbe/<uuid> for the project inside the initvm to use.
	Use 'elbe control list_projects' to get a list of the available projects.
	Another option would be to use the --writeproject option, when the
	pbuilder is created.

--xmlfile <xmlfile>::
	This file is used to create a new ELBE project including the pbuilder
	environment.

--cpuset <int>::
	When this value is not -1 (the default), the pbuilder is run using
	'taskset <cpuset>' which allows to limit the number of cpus used
	for the build. This is useful when multithreading and qemu-user
	yield problem with e.g. java.

--profile string::
	Specify the build profile(s) to build. (dpkg-buildpackage -P<profile>)
	Provide multiple profiles as a comma separated list.

--cross::
        Combined with the create command it creates a chroot environment to make
        crossbuilding possible. Combined with the build command it will use
        this environment for crossbuilding.

COMMANDS
--------

'create'::

A pbuilder environment for the given project or xml File will be created.
If --cross is given the pbuilder environment will be created to crossbuild packages.

'build'::

Build the 'Debianized Project' in the current working directory. (A valid
./debian directory needs to exist.) If --project was specified, the specified
build environment will be used. If --xmlfile is specified, a new build
environment will be created for the given ELBE XML File, and the 'Debianized
Project' in the current working directory will be built. The result of the
package build is stored in ../ like pbuilder does.

EXAMPLES
--------

* Build a pbuilder for 'myarm.xml'. Save project name into myarm.prj
+
--------
# elbe pbuilder create --xmlfile myarm.xml --writeproject myarm.prj 
--------

* Use the pbuilder we have built, to build 'program', using the prj
  File generated in parent directory
+
--------
# cd program
# elbe pbuilder build --project `cat ../myarm.prj`
--------

* Use the pbuilder we have built, to build 'program', using the prj
  File generated in parent directory. And don't use more than one CPU
  as a workaround for qemu-user and java problems.
+
--------
# cd program
# elbe pbuilder build --project `cat ../myarm.prj` --cpuset 1
--------

SEE ALSO
--------
linkgit:elbe-control[1]
linkgit:elbe-initvm[1]
linkgit:pdebuild[1]

ELBE
----
Part of the linkgit:elbe[1] suite
